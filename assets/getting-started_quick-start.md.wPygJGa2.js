import{_ as t,c as a,o as i,ae as s}from"./chunks/framework.Dh1jimFm.js";const p=JSON.parse('{"title":"Quick Start Guide","description":"","frontmatter":{},"headers":[],"relativePath":"getting-started/quick-start.md","filePath":"getting-started/quick-start.md"}'),n={name:"getting-started/quick-start.md"};function r(o,e,l,h,u,d){return i(),a("div",null,e[0]||(e[0]=[s(`<h1 id="quick-start-guide" tabindex="-1">Quick Start Guide <a class="header-anchor" href="#quick-start-guide" aria-label="Permalink to &quot;Quick Start Guide&quot;">​</a></h1><p>This guide will help you run your first tests with the Factifai Agent Suite. We&#39;ll cover basic examples using both OpenAI and AWS Bedrock models.</p><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><p>Before you begin, make sure you have:</p><ol><li><a href="/getting-started/installation.html">Installed the Factifai Agent Suite</a></li><li><a href="/getting-started/installation.html#configuring-api-keys">Configured your API keys</a> (OpenAI or AWS Bedrock)</li><li><a href="/getting-started/installation.html#installing-playwright-dependencies">Installed Playwright dependencies</a></li></ol><h2 id="running-your-first-test-with-openai" tabindex="-1">Running Your First Test with OpenAI <a class="header-anchor" href="#running-your-first-test-with-openai" aria-label="Permalink to &quot;Running Your First Test with OpenAI&quot;">​</a></h2><p>If you&#39;ve configured your OpenAI API key, you can run a simple test like this:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Run a test using natural language</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --model</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openai</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Navigate to duckduckgo.com and search for &#39;testing automation&#39;&quot;</span></span></code></pre></div><p>This command will:</p><ol><li>Launch a browser</li><li>Navigate to DuckDuckGo</li><li>Enter &quot;testing automation&quot; in the search box</li><li>Submit the search</li><li>Wait for the results to load</li><li>Generate a report of the test execution</li></ol><h2 id="running-your-first-test-with-aws-bedrock" tabindex="-1">Running Your First Test with AWS Bedrock <a class="header-anchor" href="#running-your-first-test-with-aws-bedrock" aria-label="Permalink to &quot;Running Your First Test with AWS Bedrock&quot;">​</a></h2><p>If you&#39;ve configured your AWS credentials, you can run a test using AWS Bedrock models:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Run a test using natural language</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --model</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bedrock</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Navigate to saucedemo.com, login with standard_user/secret_sauce, and add the first product to cart&quot;</span></span></code></pre></div><p>This command will:</p><ol><li>Launch a browser</li><li>Navigate to the Sauce Demo website</li><li>Enter the username and password</li><li>Click the login button</li><li>Add the first product to the cart</li><li>Generate a report of the test execution</li></ol><h2 id="understanding-the-output" tabindex="-1">Understanding the Output <a class="header-anchor" href="#understanding-the-output" aria-label="Permalink to &quot;Understanding the Output&quot;">​</a></h2><p>When you run a test, you&#39;ll see real-time progress in your terminal:</p><ol><li><strong>Test Parsing</strong>: The AI breaks down your natural language instructions into discrete steps</li><li><strong>Test Execution</strong>: Each step is executed in the browser with visual feedback</li><li><strong>Test Results</strong>: A summary of the test execution is displayed in the terminal</li><li><strong>Report Generation</strong>: HTML and XML reports are generated for documentation and CI/CD integration</li></ol><h2 id="example-test-scenarios" tabindex="-1">Example Test Scenarios <a class="header-anchor" href="#example-test-scenarios" aria-label="Permalink to &quot;Example Test Scenarios&quot;">​</a></h2><p>Here are some more examples of tests you can run:</p><h3 id="e-commerce-flow" tabindex="-1">E-commerce Flow <a class="header-anchor" href="#e-commerce-flow" aria-label="Permalink to &quot;E-commerce Flow&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Navigate to saucedemo.com, login with standard_user/secret_sauce, add all products to cart, go to checkout, fill in First Name: John, Last Name: Doe, Zip: 12345, and complete the purchase&quot;</span></span></code></pre></div><h3 id="form-validation" tabindex="-1">Form Validation <a class="header-anchor" href="#form-validation" aria-label="Permalink to &quot;Form Validation&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Navigate to demoqa.com/text-box, fill in the form with name &#39;Test User&#39;, email &#39;test@example.com&#39;, current address &#39;123 Test St&#39;, permanent address &#39;456 Perm Ave&#39;, and submit the form. Verify the submitted information appears below the form.&quot;</span></span></code></pre></div><h3 id="cross-browser-testing" tabindex="-1">Cross-browser Testing <a class="header-anchor" href="#cross-browser-testing" aria-label="Permalink to &quot;Cross-browser Testing&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --browser</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firefox</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Navigate to whatismybrowser.com and take a screenshot&quot;</span></span></code></pre></div><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><p>Now that you&#39;ve run your first tests, you can:</p><ul><li><a href="/features/">Explore the features</a> in more detail</li><li>Learn about <a href="/features/test-parsing.html">test parsing</a> and how to write effective test instructions</li><li>Learn <a href="/guides/writing-test-cases.html">best practices for writing test cases</a> to get the most reliable results</li><li>Check out the <a href="/guides/">guides</a> for more advanced usage</li><li>Learn how to <a href="/guides/ci-cd-integration.html">integrate with CI/CD pipelines</a></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Remember, you can write tests in plain English! The more descriptive your instructions, the better the AI can understand what you want to test.</p></div>`,30)]))}const g=t(n,[["render",r]]);export{p as __pageData,g as default};
