import{_ as a}from"./chunks/test-execution-demo.Coj5YXEJ.js";import{_ as n,c as e,o as i,ae as t}from"./chunks/framework.tuuL-SzM.js";const k=JSON.parse('{"title":"CLI Reports","description":"","frontmatter":{},"headers":[],"relativePath":"features/cli-reports.md","filePath":"features/cli-reports.md"}'),p={name:"features/cli-reports.md"};function l(o,s,r,h,c,d){return i(),e("div",null,s[0]||(s[0]=[t('<h1 id="cli-reports" tabindex="-1">CLI Reports <a class="header-anchor" href="#cli-reports" aria-label="Permalink to &quot;CLI Reports&quot;">​</a></h1><p>The Factifai Agent Suite provides comprehensive, beautifully formatted test results directly in your terminal. These CLI reports give you immediate insights into your test execution without having to open external files or tools.</p><video controls autoplay loop muted class="feature-video"><source src="'+a+`" type="video/mp4"> Your browser does not support the video tag. </video><h2 id="how-it-works" tabindex="-1">How It Works <a class="header-anchor" href="#how-it-works" aria-label="Permalink to &quot;How It Works&quot;">​</a></h2><p>When a test completes, Factifai Agent automatically generates a detailed report in the terminal that includes:</p><ol><li><strong>Test Execution Report</strong> - Analysis of the test run and generation of detailed results</li><li><strong>Test Results Summary</strong> - Overall pass rate, summary of what happened, and test status</li><li><strong>Detailed Step Analysis</strong> - Comprehensive breakdown of each test step with status and notes</li><li><strong>Error Analysis</strong> - In-depth analysis of what went wrong when tests fail</li><li><strong>Recommendations</strong> - AI-generated suggestions for fixing test issues</li><li><strong>Critical Issues</strong> - Highlighting of blockers that prevented test completion</li></ol><h2 id="benefits-of-cli-reports" tabindex="-1">Benefits of CLI Reports <a class="header-anchor" href="#benefits-of-cli-reports" aria-label="Permalink to &quot;Benefits of CLI Reports&quot;">​</a></h2><h3 id="immediate-feedback" tabindex="-1">Immediate Feedback <a class="header-anchor" href="#immediate-feedback" aria-label="Permalink to &quot;Immediate Feedback&quot;">​</a></h3><p>Get instant feedback on test results without having to open external files or tools.</p><h3 id="comprehensive-information" tabindex="-1">Comprehensive Information <a class="header-anchor" href="#comprehensive-information" aria-label="Permalink to &quot;Comprehensive Information&quot;">​</a></h3><p>See detailed information about each step, including what was executed and whether it passed or failed, with explanatory notes.</p><h3 id="intelligent-error-analysis" tabindex="-1">Intelligent Error Analysis <a class="header-anchor" href="#intelligent-error-analysis" aria-label="Permalink to &quot;Intelligent Error Analysis&quot;">​</a></h3><p>When a test fails, the CLI report provides detailed error analysis to help you quickly identify and fix issues, including root cause identification.</p><h3 id="actionable-recommendations" tabindex="-1">Actionable Recommendations <a class="header-anchor" href="#actionable-recommendations" aria-label="Permalink to &quot;Actionable Recommendations&quot;">​</a></h3><p>Receive AI-generated recommendations for addressing test failures, helping you resolve issues faster.</p><h2 id="cli-report-sections" tabindex="-1">CLI Report Sections <a class="header-anchor" href="#cli-report-sections" aria-label="Permalink to &quot;CLI Report Sections&quot;">​</a></h2><h3 id="test-execution-report" tabindex="-1">Test Execution Report <a class="header-anchor" href="#test-execution-report" aria-label="Permalink to &quot;Test Execution Report&quot;">​</a></h3><p>The report generation process is shown at the beginning:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>TEST EXECUTION REPORT</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Analyzing test execution and generating detailed report</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt; Analyzing test execution...</span></span>
<span class="line"><span>&gt; Processing 96 tool calls and 96 tool responses...</span></span>
<span class="line"><span>&gt; Generating detailed test report...</span></span>
<span class="line"><span>&gt; Report generation completed successfully</span></span></code></pre></div><h3 id="test-results-summary" tabindex="-1">Test Results Summary <a class="header-anchor" href="#test-results-summary" aria-label="Permalink to &quot;Test Results Summary&quot;">​</a></h3><p>The test summary provides a high-level overview of the test execution:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Test Results ────────────────────────────────────────────────────────────────────────────────────────</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Test Pass Rate: 60%</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Summary:</span></span>
<span class="line"><span>The browser automation test session targeted the login workflow for saucedemo.com using the credentials &#39;new_user&#39; and &#39;new_password&#39;. Test</span></span>
<span class="line"><span>steps for navigation and form entry were successful, but the login and subsequent verification steps failed. The system displayed an error</span></span>
<span class="line"><span>message indicating the provided credentials were invalid, preventing completion of the intended workflow. All browser automation commands</span></span>
<span class="line"><span>executed without technical errors.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Test Status:</span></span>
<span class="line"><span>✓ 3 tests passed</span></span>
<span class="line"><span>✗ 2 tests failed</span></span>
<span class="line"><span>○ 0 tests not started</span></span></code></pre></div><p>For successful tests, the summary is positive:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Test Pass Rate: 100%</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Summary:</span></span>
<span class="line"><span>All test steps executed successfully for the browser automation session targeting the text-box functionality on demoqa.com. The form was</span></span>
<span class="line"><span>filled with valid data, submitted, and the subsequent display of information was verified, indicating a stable process flow. No steps</span></span>
<span class="line"><span>failed or were blocked.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Test Status:</span></span>
<span class="line"><span>✓ 7 tests passed</span></span>
<span class="line"><span>✗ 0 tests failed</span></span>
<span class="line"><span>○ 0 tests not started</span></span></code></pre></div><h3 id="detailed-step-analysis" tabindex="-1">Detailed Step Analysis <a class="header-anchor" href="#detailed-step-analysis" aria-label="Permalink to &quot;Detailed Step Analysis&quot;">​</a></h3><p>Each test step is shown in a table with status and detailed notes:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>┌─────┬─────────────────────────────────────────────┬─────────┬──────────────────────────┐</span></span>
<span class="line"><span>│ #   │ Test Step                                   │ Status  │ Notes                    │</span></span>
<span class="line"><span>├─────┼─────────────────────────────────────────────┼─────────┼──────────────────────────┤</span></span>
<span class="line"><span>│ 1   │ Navigate to saucedemo.com                   │ ✓ PASSED│ Step 1 remains passed. Th│</span></span>
<span class="line"><span>│     │                                             │         │e login page was loaded a │</span></span>
<span class="line"><span>│     │                                             │         │nd all required elements  │</span></span>
<span class="line"><span>│     │                                             │         │were present, as previous │</span></span>
<span class="line"><span>│     │                                             │         │ly verified by a definiti │</span></span>
<span class="line"><span>│     │                                             │         │ve SUCCESS result. No reg │</span></span>
<span class="line"><span>│     │                                             │         │ression or evidence has e │</span></span>
<span class="line"><span>│     │                                             │         │merged to alter this stat │</span></span>
<span class="line"><span>│     │                                             │         │us.                       │</span></span>
<span class="line"><span>├─────┼─────────────────────────────────────────────┼─────────┼──────────────────────────┤</span></span>
<span class="line"><span>│ 2   │ Enter &#39;new_user&#39; into the username field    │ ✓ PASSED│ Step 2 remains passed. Th│</span></span>
<span class="line"><span>│     │                                             │         │e username, &#39;new_user&#39;, w │</span></span>
<span class="line"><span>│     │                                             │         │as definitely entered in  │</span></span>
<span class="line"><span>│     │                                             │         │the username field accord │</span></span>
<span class="line"><span>│     │                                             │         │ing to prior authoritativ │</span></span>
<span class="line"><span>│     │                                             │         │e verification. There hav │</span></span>
<span class="line"><span>│     │                                             │         │e been no changes or issu │</span></span>
<span class="line"><span>│     │                                             │         │es affecting this input.  │</span></span>
<span class="line"><span>└─────┴─────────────────────────────────────────────┴─────────┴──────────────────────────┘</span></span></code></pre></div><h3 id="error-analysis" tabindex="-1">Error Analysis <a class="header-anchor" href="#error-analysis" aria-label="Permalink to &quot;Error Analysis&quot;">​</a></h3><p>When tests fail, a detailed error analysis is provided:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Test Execution Error ────────────────────────────────────────────────────────────────────────────────</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Last Error:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Verification failed after 3 retries: The login form is still displayed after clicking the Login button (label 4) at coordinates (640, 328).</span></span>
<span class="line"><span>Above the login button, there is a visible error message reading: &quot;Epic sadface: Username and password do not match any user in this</span></span>
<span class="line"><span>service.&quot; This is clear proof that the login attempt with username &quot;new_user&quot; and password &quot;new_password&quot; failed, and the system did not</span></span>
<span class="line"><span>advance to a post-login or inventory page. The test case cannot be completed successfully as described using these credentials.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Error Analysis:</span></span>
<span class="line"><span>The test failed on the login verification step because the username and password did not match any registered user on saucedemo.com. The</span></span>
<span class="line"><span>application displayed a clear error message confirming that authentication was unsuccessful with the given credentials. This is a data</span></span>
<span class="line"><span>issue rather than a technical automation failure—using valid credentials is necessary for successful test execution.</span></span></code></pre></div><h3 id="recommendations" tabindex="-1">Recommendations <a class="header-anchor" href="#recommendations" aria-label="Permalink to &quot;Recommendations&quot;">​</a></h3><p>AI-generated recommendations for addressing test failures:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Recommendations:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>❯ Review the list of valid usernames and passwords for saucedemo.com and use credentials known to work.</span></span>
<span class="line"><span>❯ Implement automated credential verification at test setup to avoid test failures due to invalid data.</span></span>
<span class="line"><span>❯ Add logic to detect and report authentication errors earlier, for clearer root cause identification.</span></span>
<span class="line"><span>❯ Optionally, include tests for invalid login credentials as negative test cases, but ensure positive flow tests use valid inputs.</span></span></code></pre></div><h3 id="critical-issues" tabindex="-1">Critical Issues <a class="header-anchor" href="#critical-issues" aria-label="Permalink to &quot;Critical Issues&quot;">​</a></h3><p>Highlighting of critical issues that blocked test completion:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Critical Issues:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>▲ Critical failure in logging in due to invalid credentials, blocking completion of the main workflow.</span></span></code></pre></div><h2 id="report-control-options" tabindex="-1">Report Control Options <a class="header-anchor" href="#report-control-options" aria-label="Permalink to &quot;Report Control Options&quot;">​</a></h2><h3 id="skip-report-generation" tabindex="-1">Skip Report Generation <a class="header-anchor" href="#skip-report-generation" aria-label="Permalink to &quot;Skip Report Generation&quot;">​</a></h3><p>For performance-critical scenarios or CI/CD pipelines where you only need test execution without detailed reporting, you can skip all report generation:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Skip all report generation (CLI and file reports)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --skip-report</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Navigate to example.com and verify the page loads&quot;</span></span></code></pre></div><p>When <code>--skip-report</code> is used, the execution configuration will show:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>📋 Execution Configuration:</span></span>
<span class="line"><span>- Provider: bedrock</span></span>
<span class="line"><span>- Model: us.anthropic.claude-3-7-sonnet-20250219-v1:0</span></span>
<span class="line"><span>- Report Generation: Disabled (--skip-report)</span></span></code></pre></div><h3 id="report-format-configuration" tabindex="-1">Report Format Configuration <a class="header-anchor" href="#report-format-configuration" aria-label="Permalink to &quot;Report Format Configuration&quot;">​</a></h3><p>You can control which report formats are generated using the <code>--report-format</code> flag or by setting a default in your configuration:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Generate only CLI reports (no file reports)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --report-format</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> html</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;test instruction&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Generate only XML reports for CI/CD integration</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --report-format</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;test instruction&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Generate both HTML and XML reports (default)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --report-format</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> both</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;test instruction&quot;</span></span></code></pre></div><h3 id="configuration-management" tabindex="-1">Configuration Management <a class="header-anchor" href="#configuration-management" aria-label="Permalink to &quot;Configuration Management&quot;">​</a></h3><p>Set default report preferences that persist across runs:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Set default report format</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> REPORT_FORMAT=html</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># View current configuration including report settings</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --show</span></span></code></pre></div><p>The configuration display includes report settings:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Report Configuration:</span></span>
<span class="line"><span>- REPORT_FORMAT: html (or xml, both, both (default))</span></span></code></pre></div><h3 id="priority-order" tabindex="-1">Priority Order <a class="header-anchor" href="#priority-order" aria-label="Permalink to &quot;Priority Order&quot;">​</a></h3><p>Report settings are resolved in this priority order:</p><ol><li><code>--skip-report</code> flag (highest priority - disables all reports)</li><li><code>--report-format</code> CLI flag</li><li><code>REPORT_FORMAT</code> config setting</li><li>Default: &quot;both&quot; (CLI + HTML + XML reports)</li></ol><h2 id="integration-with-ci-cd" tabindex="-1">Integration with CI/CD <a class="header-anchor" href="#integration-with-ci-cd" aria-label="Permalink to &quot;Integration with CI/CD&quot;">​</a></h2><p>The CLI reports are designed to work well in CI/CD environments. The output is formatted to be readable in CI/CD logs while still providing detailed information about test execution.</p><h3 id="performance-optimization" tabindex="-1">Performance Optimization <a class="header-anchor" href="#performance-optimization" aria-label="Permalink to &quot;Performance Optimization&quot;">​</a></h3><p>For CI/CD pipelines where you only need test execution results without detailed reporting:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Fast execution without reports</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --skip-report</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;test instruction&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Generate only XML reports for test result integration</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --report-format</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;test instruction&quot;</span></span></code></pre></div><h3 id="environment-specific-configuration" tabindex="-1">Environment-Specific Configuration <a class="header-anchor" href="#environment-specific-configuration" aria-label="Permalink to &quot;Environment-Specific Configuration&quot;">​</a></h3><p>Configure different report formats for different environments:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Development - full reporting</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> REPORT_FORMAT=both</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># CI/CD - XML only for integration</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --report-format</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;test instruction&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Performance testing - no reports</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --skip-report</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;test instruction&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Skip test case analysis for faster parsing</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --skip-analysis</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;test instruction&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Maximum performance - skip both analysis and reports</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --skip-analysis</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --skip-report</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;test instruction&quot;</span></span></code></pre></div><h3 id="test-case-analysis-control" tabindex="-1">Test Case Analysis Control <a class="header-anchor" href="#test-case-analysis-control" aria-label="Permalink to &quot;Test Case Analysis Control&quot;">​</a></h3><p>For scenarios where you want to skip the test case quality analysis and suggestions step, you can use the <code>--skip-analysis</code> flag:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Skip test case quality analysis for faster execution</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --skip-analysis</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Navigate to example.com and verify the page loads&quot;</span></span></code></pre></div><p>When <code>--skip-analysis</code> is used, the execution configuration will show:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>📋 Execution Configuration:</span></span>
<span class="line"><span>- Provider: bedrock</span></span>
<span class="line"><span>- Model: us.anthropic.claude-3-7-sonnet-20250219-v1:0</span></span>
<span class="line"><span>- Report Format: both</span></span>
<span class="line"><span>- Test Analysis: Disabled (--skip-analysis)</span></span></code></pre></div><h3 id="analysis-configuration-management" tabindex="-1">Analysis Configuration Management <a class="header-anchor" href="#analysis-configuration-management" aria-label="Permalink to &quot;Analysis Configuration Management&quot;">​</a></h3><p>Set default analysis preferences that persist across runs:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Skip analysis by default</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SKIP_ANALYSIS=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Enable analysis by default (default behavior)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SKIP_ANALYSIS=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># View current configuration including analysis settings</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --show</span></span></code></pre></div><p>The configuration display includes analysis settings:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Report Configuration:</span></span>
<span class="line"><span>- REPORT_FORMAT: both (default)</span></span>
<span class="line"><span>- SKIP_ANALYSIS: true</span></span></code></pre></div><h3 id="performance-optimization-priority" tabindex="-1">Performance Optimization Priority <a class="header-anchor" href="#performance-optimization-priority" aria-label="Permalink to &quot;Performance Optimization Priority&quot;">​</a></h3><p>Settings are resolved in this priority order:</p><ol><li><code>--skip-report</code> flag (highest priority - disables all reports)</li><li><code>--report-format</code> CLI flag</li><li><code>REPORT_FORMAT</code> config setting</li><li><code>--skip-analysis</code> CLI flag</li><li><code>SKIP_ANALYSIS</code> config setting</li><li>Defaults: &quot;both&quot; reports, analysis enabled</li></ol><h2 id="coming-soon" tabindex="-1">Coming Soon <a class="header-anchor" href="#coming-soon" aria-label="Permalink to &quot;Coming Soon&quot;">​</a></h2><p>Additional customization options for CLI reports will be available in future releases:</p><ul><li><strong>Verbosity Levels</strong> - Control the amount of detail shown in the report</li><li><strong>Report Formats</strong> - Choose between different output formats (compact, detailed, JSON)</li><li><strong>Custom Templates</strong> - Define your own report templates</li><li><strong>Report Filtering</strong> - Focus on specific aspects of the report (failures only, summary only)</li><li><strong>Performance Metrics</strong> - Detailed timing information for each step and the overall test</li><li><strong>Export Options</strong> - Save reports to files in various formats</li></ul><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><p>Now that you understand how CLI reports work, you might want to explore:</p><ul><li><a href="./html-xml-reports.html">HTML &amp; XML Reports</a> - Learn about generating structured reports for documentation and CI/CD integration</li><li><a href="./test-parsing.html">Test Parsing</a> - Understand how natural language instructions are transformed into executable test steps</li><li><a href="./live-progress.html">Live Test Progress</a> - See how to monitor test execution in real-time</li></ul>`,80)]))}const f=n(p,[["render",l]]);export{k as __pageData,f as default};
