import{_ as t,c as i,o as a,ae as s}from"./chunks/framework.tuuL-SzM.js";const u=JSON.parse('{"title":"Factifai Agent Suite Documentation","description":"","frontmatter":{},"headers":[],"relativePath":"README.md","filePath":"README.md"}'),n={name:"README.md"};function o(l,e,d,r,c,h){return a(),i("div",null,e[0]||(e[0]=[s(`<h1 id="factifai-agent-suite-documentation" tabindex="-1">Factifai Agent Suite Documentation <a class="header-anchor" href="#factifai-agent-suite-documentation" aria-label="Permalink to &quot;Factifai Agent Suite Documentation&quot;">​</a></h1><p>This directory contains the VitePress documentation site for the Factifai Agent Suite.</p><h2 id="local-development" tabindex="-1">Local Development <a class="header-anchor" href="#local-development" aria-label="Permalink to &quot;Local Development&quot;">​</a></h2><p>To run the documentation site locally:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Navigate to the docs directory</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install dependencies</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start the development server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:dev</span></span></code></pre></div><p>The site will be available at port 5173</p><h2 id="building-the-documentation" tabindex="-1">Building the Documentation <a class="header-anchor" href="#building-the-documentation" aria-label="Permalink to &quot;Building the Documentation&quot;">​</a></h2><p>To build the documentation site:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Navigate to the docs directory</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Build the site</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:build</span></span></code></pre></div><p>The built site will be available in the <code>.vitepress/dist</code> directory.</p><h2 id="deployment" tabindex="-1">Deployment <a class="header-anchor" href="#deployment" aria-label="Permalink to &quot;Deployment&quot;">​</a></h2><p>The documentation site is automatically deployed to GitHub Pages when changes are pushed to the <code>feature/docs</code> branch that affect files in the <code>docs/</code> directory. The deployment is handled by a GitHub Actions workflow defined in <code>.github/workflows/deploy-docs.yml</code>.</p><h3 id="manual-deployment" tabindex="-1">Manual Deployment <a class="header-anchor" href="#manual-deployment" aria-label="Permalink to &quot;Manual Deployment&quot;">​</a></h3><p>You can manually trigger the deployment workflow:</p><ol><li>Go to the <strong>Actions</strong> tab in the GitHub repository</li><li>Select the <strong>Deploy Docs to GitHub Pages</strong> workflow from the left sidebar</li><li>Click the <strong>Run workflow</strong> button</li><li>Configure the following options: <ul><li><strong>Deploy to GitHub Pages</strong>: Whether to deploy the built documentation to GitHub Pages (default: true)</li><li><strong>Custom commit message for deployment</strong>: A custom commit message for the deployment commit (default: &quot;Deploy documentation site&quot;)</li></ul></li><li>Click <strong>Run workflow</strong> to start the process</li></ol><p>This is useful for:</p><ul><li>Deploying documentation without making changes to the files</li><li>Testing the deployment process</li><li>Deploying with a custom commit message</li></ul><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><p>The VitePress configuration is defined in <code>.vitepress/config.mts</code>. If you need to modify the site configuration, such as navigation, sidebar, or theme settings, edit this file.</p><h2 id="adding-content" tabindex="-1">Adding Content <a class="header-anchor" href="#adding-content" aria-label="Permalink to &quot;Adding Content&quot;">​</a></h2><p>To add new content to the documentation:</p><ol><li>Create a new Markdown file in the appropriate directory</li><li>Update the sidebar configuration in <code>.vitepress/config.mts</code> if needed</li><li>Link to the new content from existing pages</li></ol><h2 id="structure" tabindex="-1">Structure <a class="header-anchor" href="#structure" aria-label="Permalink to &quot;Structure&quot;">​</a></h2><ul><li><code>assets/</code> - Static assets like images and videos</li><li><code>features/</code> - Documentation for Factifai Agent Suite features</li><li><code>getting-started/</code> - Getting started guides</li><li><code>guides/</code> - How-to guides for common tasks</li><li><code>tools/</code> - Documentation for specific tools in the suite</li></ul>`,24)]))}const g=t(n,[["render",o]]);export{u as __pageData,g as default};
