import{_ as i,c as a,o as e,ae as t}from"./chunks/framework.Dh1jimFm.js";const c=JSON.parse('{"title":"Setting Up a Test Project","description":"","frontmatter":{},"headers":[],"relativePath":"guides/setup-test-project.md","filePath":"guides/setup-test-project.md"}'),n={name:"guides/setup-test-project.md"};function p(l,s,h,r,o,k){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="setting-up-a-test-project" tabindex="-1">Setting Up a Test Project <a class="header-anchor" href="#setting-up-a-test-project" aria-label="Permalink to &quot;Setting Up a Test Project&quot;">​</a></h1><p>This guide will walk you through the process of setting up a test project with the Factifai Agent Suite. By the end, you&#39;ll have a fully functional test environment ready for creating and running automated tests.</p><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><p>Before you begin, make sure you have:</p><ul><li><strong>Node.js 16+</strong> installed on your system</li><li><strong>npm or pnpm</strong> for package management</li><li><strong>An OpenAI API key</strong> or <strong>AWS Bedrock credentials</strong> for the AI capabilities</li></ul><h2 id="step-1-install-factifai-agent" tabindex="-1">Step 1: Install Factifai Agent <a class="header-anchor" href="#step-1-install-factifai-agent" aria-label="Permalink to &quot;Step 1: Install Factifai Agent&quot;">​</a></h2><p>First, install the Factifai Agent CLI tool globally:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Using npm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @presidio-dev/factifai-agent</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Using pnpm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @presidio-dev/factifai-agent</span></span></code></pre></div><h2 id="step-2-install-playwright-dependencies" tabindex="-1">Step 2: Install Playwright Dependencies <a class="header-anchor" href="#step-2-install-playwright-dependencies" aria-label="Permalink to &quot;Step 2: Install Playwright Dependencies&quot;">​</a></h2><p>Factifai Agent uses Playwright for browser automation. Install the necessary browser dependencies:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> playwright</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --with-deps</span></span></code></pre></div><p>This command installs browser binaries for Chromium, Firefox, and WebKit, along with any necessary system dependencies.</p><h2 id="step-3-configure-api-credentials" tabindex="-1">Step 3: Configure API Credentials <a class="header-anchor" href="#step-3-configure-api-credentials" aria-label="Permalink to &quot;Step 3: Configure API Credentials&quot;">​</a></h2><p>Configure your API credentials for the LLM provider you want to use:</p><h3 id="for-openai" tabindex="-1">For OpenAI <a class="header-anchor" href="#for-openai" aria-label="Permalink to &quot;For OpenAI&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> OPENAI_API_KEY=your-api-key-here</span></span></code></pre></div><h3 id="for-aws-bedrock" tabindex="-1">For AWS Bedrock <a class="header-anchor" href="#for-aws-bedrock" aria-label="Permalink to &quot;For AWS Bedrock&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AWS_ACCESS_KEY_ID=your-access-key-id</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AWS_SECRET_ACCESS_KEY=your-secret-access-key</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AWS_DEFAULT_REGION=us-west-2</span></span></code></pre></div><h2 id="step-4-create-a-project-directory" tabindex="-1">Step 4: Create a Project Directory <a class="header-anchor" href="#step-4-create-a-project-directory" aria-label="Permalink to &quot;Step 4: Create a Project Directory&quot;">​</a></h2><p>Create a directory for your test project:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-factifai-tests</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-factifai-tests</span></span></code></pre></div><h2 id="step-5-initialize-a-package" tabindex="-1">Step 5: Initialize a Package <a class="header-anchor" href="#step-5-initialize-a-package" aria-label="Permalink to &quot;Step 5: Initialize a Package&quot;">​</a></h2><p>Initialize a package.json file:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span></code></pre></div><p>This creates a basic package.json file that you can customize later.</p><h2 id="step-6-create-a-tests-directory" tabindex="-1">Step 6: Create a Tests Directory <a class="header-anchor" href="#step-6-create-a-tests-directory" aria-label="Permalink to &quot;Step 6: Create a Tests Directory&quot;">​</a></h2><p>Create a directory for your test files:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tests</span></span></code></pre></div><h2 id="step-7-create-your-first-test-file" tabindex="-1">Step 7: Create Your First Test File <a class="header-anchor" href="#step-7-create-your-first-test-file" aria-label="Permalink to &quot;Step 7: Create Your First Test File&quot;">​</a></h2><p>Create a simple test file to verify your setup:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tests/first-test.txt</span></span></code></pre></div><p>Open the file in your editor and add a simple test:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>**Objective:** Verify DuckDuckGo Search</span></span>
<span class="line"><span></span></span>
<span class="line"><span>**Test Steps:**</span></span>
<span class="line"><span></span></span>
<span class="line"><span>1. **Navigate to duckduckgo.com**</span></span>
<span class="line"><span>   * **Expected:** DuckDuckGo homepage loads</span></span>
<span class="line"><span></span></span>
<span class="line"><span>2. **Search for &quot;automated testing&quot;**</span></span>
<span class="line"><span>   * **Action:** Type &quot;automated testing&quot; in search box and press Enter</span></span>
<span class="line"><span>   * **Expected:** Search results for &quot;automated testing&quot; appear</span></span>
<span class="line"><span></span></span>
<span class="line"><span>3. **Verify search results**</span></span>
<span class="line"><span>   * **Expected:** At least 5 search results are displayed</span></span>
<span class="line"><span>   * **Expected:** The page title contains &quot;automated testing&quot;</span></span></code></pre></div><h2 id="step-8-run-your-first-test" tabindex="-1">Step 8: Run Your First Test <a class="header-anchor" href="#step-8-run-your-first-test" aria-label="Permalink to &quot;Step 8: Run Your First Test&quot;">​</a></h2><p>Run your first test using the Factifai Agent CLI:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Using OpenAI</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --model</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openai</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tests/first-test.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Using AWS Bedrock</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --model</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bedrock</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tests/first-test.txt</span></span></code></pre></div><p>You should see the test execute in real-time, with the browser opening, navigating to DuckDuckGo, performing the search, and verifying the results.</p><h2 id="step-9-review-the-test-results" tabindex="-1">Step 9: Review the Test Results <a class="header-anchor" href="#step-9-review-the-test-results" aria-label="Permalink to &quot;Step 9: Review the Test Results&quot;">​</a></h2><p>After the test completes, review the results in the terminal. You should see:</p><ul><li>A summary of the test execution</li><li>Details for each step</li><li>Screenshots taken during the test</li><li>Any errors or warnings</li></ul><h2 id="step-10-create-a-test-script-in-package-json" tabindex="-1">Step 10: Create a Test Script in package.json <a class="header-anchor" href="#step-10-create-a-test-script-in-package-json" aria-label="Permalink to &quot;Step 10: Create a Test Script in package.json&quot;">​</a></h2><p>Add a test script to your package.json file:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;factifai-agent run --file tests/first-test.txt&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Now you can run your tests using:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span></code></pre></div><blockquote><p><strong>Coming Soon:</strong> Configuration file support will be available in a future release, allowing you to set default options like model, browser, timeout, and retry settings.</p></blockquote><h2 id="step-12-create-additional-test-files" tabindex="-1">Step 12: Create Additional Test Files <a class="header-anchor" href="#step-12-create-additional-test-files" aria-label="Permalink to &quot;Step 12: Create Additional Test Files&quot;">​</a></h2><p>Create additional test files for different features or scenarios:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tests/login-test.txt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tests/checkout-test.txt</span></span></code></pre></div><p>Add appropriate test steps to each file.</p><h2 id="step-13-organize-your-tests" tabindex="-1">Step 13: Organize Your Tests <a class="header-anchor" href="#step-13-organize-your-tests" aria-label="Permalink to &quot;Step 13: Organize Your Tests&quot;">​</a></h2><p>As your test suite grows, consider organizing your tests into directories:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tests/e2e</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tests/regression</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tests/smoke</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Move or create tests in these directories</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tests/e2e/full-user-journey.txt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tests/regression/login-scenarios.txt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tests/smoke/critical-paths.txt</span></span></code></pre></div><h2 id="step-14-set-up-a-ci-cd-configuration" tabindex="-1">Step 14: Set Up a CI/CD Configuration <a class="header-anchor" href="#step-14-set-up-a-ci-cd-configuration" aria-label="Permalink to &quot;Step 14: Set Up a CI/CD Configuration&quot;">​</a></h2><p>If you&#39;re using a CI/CD system, create a configuration file for it. For example, for GitHub Actions:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .github/workflows</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .github/workflows/tests.yml</span></span></code></pre></div><p>Add the following content to the file:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Factifai Tests</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    branches</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  pull_request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    branches</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">jobs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    runs-on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ubuntu-latest</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    steps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">actions/checkout@v3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Setup Node.js</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">actions/setup-node@v3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          node-version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;16&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Install dependencies</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          npm install -g @presidio-dev/factifai-agent</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          npx playwright install --with-deps</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Configure Factifai Agent</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          factifai-agent config --set OPENAI_API_KEY=\${{ secrets.OPENAI_API_KEY }}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Run tests</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          factifai-agent run --file tests/first-test.txt</span></span></code></pre></div><blockquote><p><strong>Coming Soon:</strong> Directory-based test running with the <code>--dir</code> option will be available in a future release, allowing you to run all tests in a directory.</p></blockquote><h2 id="step-15-create-a-readme" tabindex="-1">Step 15: Create a README <a class="header-anchor" href="#step-15-create-a-readme" aria-label="Permalink to &quot;Step 15: Create a README&quot;">​</a></h2><p>Create a README.md file to document your test project:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> README.md</span></span></code></pre></div><p>Add information about your test project, how to run the tests, and any other relevant details.</p><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><p>Now that you have set up your test project, you can:</p><ul><li><a href="/guides/ci-cd-integration.html">Integrate with CI/CD pipelines</a></li></ul><p><strong>Coming Soon:</strong></p><ul><li>Creating more complex test suites</li><li>Writing effective test instructions</li><li>Cross-browser testing</li></ul><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">​</a></h2><h3 id="browser-dependencies" tabindex="-1">Browser Dependencies <a class="header-anchor" href="#browser-dependencies" aria-label="Permalink to &quot;Browser Dependencies&quot;">​</a></h3><p>If you encounter issues with browser dependencies, try reinstalling them:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> playwright</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --with-deps</span></span></code></pre></div><h3 id="api-key-issues" tabindex="-1">API Key Issues <a class="header-anchor" href="#api-key-issues" aria-label="Permalink to &quot;API Key Issues&quot;">​</a></h3><p>If you have issues with your API key, verify it&#39;s correctly set:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factifai-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --show</span></span></code></pre></div><h3 id="permission-issues" tabindex="-1">Permission Issues <a class="header-anchor" href="#permission-issues" aria-label="Permalink to &quot;Permission Issues&quot;">​</a></h3><p>If you encounter permission issues when running tests, make sure you have the necessary permissions for the directories you&#39;re using.</p><h3 id="browser-launch-issues" tabindex="-1">Browser Launch Issues <a class="header-anchor" href="#browser-launch-issues" aria-label="Permalink to &quot;Browser Launch Issues&quot;">​</a></h3><p>If the browser fails to launch, check if you have any conflicting browser processes running or if your system has the necessary dependencies installed.</p>`,79)]))}const g=i(n,[["render",p]]);export{c as __pageData,g as default};
